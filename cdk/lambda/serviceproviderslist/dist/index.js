"use strict";var p=Object.defineProperty;var U=Object.getOwnPropertyDescriptor;var C=Object.getOwnPropertyNames;var h=Object.prototype.hasOwnProperty;var u=(t,r)=>{for(var a in r)p(t,a,{get:r[a],enumerable:!0})},S=(t,r,a,s)=>{if(r&&typeof r=="object"||typeof r=="function")for(let o of C(r))!h.call(t,o)&&o!==a&&p(t,o,{get:()=>r[o],enumerable:!(s=U(r,o))||s.enumerable});return t};var A=t=>S(p({},"__esModule",{value:!0}),t);var T={};u(T,{handler:()=>R});module.exports=A(T);var g=require("@aws-sdk/client-cognito-identity-provider"),d=require("@aws-sdk/client-dynamodb"),f=new d.DynamoDBClient({region:process.env.AWS_REGION}),O=new g.CognitoIdentityProviderClient({region:process.env.AWS_REGION}),N=process.env.SAMLPROXY_API_URL,w=60,b=async t=>{let r=await fetch(N);console.log("fetch samlurl res",r);let a=await r.json();console.log("fetch samlurl resData",a);let s=[];for(var o in a){console.log("samlslist getting item with id from ddb",a[o].id);let n={TableName:process.env.AMFA_SPINFO_TABLE,Key:{id:{S:`#SAML#${a[o].id}`}}},c=null;try{let l=await t.send(new d.GetItemCommand(n));console.log("samlslist get spInfo from dynamodb Res",l),l?.Item?.id&&(c={logoUrl:l?.Item?.logoUrl?.S,serviceUrl:l?.Item?.serviceUrl?.S,released:!!l?.Item?.released?.BOOL})}catch(l){console.log("samlslist get spInfo from dynamodb error",l)}s.push({id:a[o].id,name:a[o].name,entityId:a[o].entityId,logoUrl:c?.logoUrl,serviceUrl:c?.serviceUrl,released:c?.released})}return s},E=async(t,r)=>{let a={TableName:process.env.AMFA_SPINFO_TABLE,Key:{id:{S:`#OIDC#${r}`}}},s=null,o=[];try{let n=await t.send(new d.GetItemCommand(a));console.log("get spInfo from dynamodb Res",n),n?.Item?.id&&(s={logoUrl:n?.Item?.logoUrl?.S,serviceUrl:n?.Item?.serviceUrl?.S,released:n?.Item?.released?.BOOL})}catch(n){console.log("appclient get spInfo from dynamodb error",n)}if(s?.serviceUrl){try{o=JSON.parse(s.serviceUrl)}catch(n){console.log("appclient oidc spInfo serviceUrl json parse error",n)}delete s.serviceUrl,s.serviceProviders=o.filter(n=>n.released)}return s},R=async t=>{console.info(`EVENT
`+JSON.stringify(t,null,2));let r={type:"exception",message:"Service Error"};try{let s={Limit:w,...t.body&&{NextToken:t.body},UserPoolId:process.env.USERPOOL_ID};console.info("params",s);let o=await O.send(new g.ListUserPoolClientsCommand(s)),n=[];if(o?.UserPoolClients&&o.UserPoolClients.length>0){let e=o.UserPoolClients.filter(i=>i.ClientName!=="hostedUIClient"&&i.ClientName!=="customAuthClient"&&i.ClientName!=="samlproxyClient"&&!i.ClientName.startsWith("amfasys_"));for(let i of e){let m=await E(f,i.ClientId);m&&m.serviceProviders.length>0&&n.push({id:i.ClientId,name:i.ClientName,logoUrl:m.logoUrl,serviceProviders:m.serviceProviders,type:"oidc"})}}(await b(f)).forEach(e=>{e.released&&n.push({id:e.id,name:e.name,logoUrl:e.logoUrl,serviceUrl:e.serviceUrl,released:e.released,type:"saml"})});let l=n.map(e=>(e.serviceProviders?.length===1&&(e.id=e.id+"#"+e.serviceProviders[0].spname.replace(/\s/g,""),e.name=e.serviceProviders[0].spname,e.released=e.serviceProviders[0].released,e.logoUrl=e.serviceProviders[0].splogourl?.length?e.serviceProviders[0].splogourl:e.logoUrl,e.serviceUrl=e.serviceProviders[0].sploginurl,delete e.serviceProviders),e)),I=parseInt(t.queryStringParameters.page),y=parseInt(t.queryStringParameters.perPage),v=(I-1)*y,P=l.length+v-1;return{statusCode:200,headers:{"Access-Control-Allow-Headers":"Content-Type,Authorization,X-Api-Key,Content-Range,X-Requested-With","Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"OPTIONS,GET,POST","Access-Control-Expose-Headers":"Content-Range","Content-Range":`serviceproviders ${v}-${P}`},body:JSON.stringify({data:l,total:l.length})}}catch(s){switch(console.log("Catch an error: ",s),s.name){case"ThrottlingException":r={type:"exception",message:"Too many requests"};break;case"InvalidParameterValue":case"InvalidParameterException":r={type:"exception",message:"Invalid parameter"};break;default:r={type:"exception",message:"Service Error"};break}}return{statusCode:500,body:JSON.stringify(r)}};0&&(module.exports={handler});
//# sourceMappingURL=index.js.map
