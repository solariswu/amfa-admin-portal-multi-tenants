"use strict";var n=Object.defineProperty;var y=Object.getOwnPropertyDescriptor;var A=Object.getOwnPropertyNames;var f=Object.prototype.hasOwnProperty;var u=(e,t)=>{for(var o in t)n(e,o,{get:t[o],enumerable:!0})},x=(e,t,o,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let a of A(t))!f.call(e,a)&&a!==o&&n(e,a,{get:()=>t[a],enumerable:!(s=y(t,a))||s.enumerable});return e};var E=e=>x(n({},"__esModule",{value:!0}),e);var T={};u(T,{default:()=>S,deleteResData:()=>i});module.exports=E(T);var c=require("@aws-sdk/client-dynamodb"),i=async(e,t,o,s,a)=>{if(e){let p=atob(e),r=await fetch(`${t}/${e}`,{method:"DELETE",cache:"no-cache",headers:{"Content-Type":"application/json",Authorization:o},body:JSON.stringify({clientId:process.env.SAML_CLIENTID,entityId:p})});console.log("saml sp delete result",r);let l=await fetch(s,{method:"GET",cache:"no-cache",headers:{"Content-Type":"application/json",Authorization:o}}),m=await l.text();console.log("samlproxy reload result",l),console.log("samlproxy reload result text",m);try{await a.send(new c.DeleteItemCommand({TableName:process.env.AMFA_SPINFO_TABLE,Key:{id:{S:"#SAML#"+e}}}))}catch(h){console.log("Error deleting SAML SPINFO item from dynamodb",h)}return r.json()}},S=i;0&&(module.exports={deleteResData});
//# sourceMappingURL=delete.js.map
