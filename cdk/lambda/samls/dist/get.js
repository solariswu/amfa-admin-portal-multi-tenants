"use strict";var c=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var U=Object.getOwnPropertyNames;var h=Object.prototype.hasOwnProperty;var y=(e,t)=>{for(var s in t)c(e,s,{get:t[s],enumerable:!0})},I=(e,t,s,a)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of U(t))!h.call(e,o)&&o!==s&&c(e,o,{get:()=>t[o],enumerable:!(a=g(t,o))||a.enumerable});return e};var u=e=>I(c({},"__esModule",{value:!0}),e);var w={};y(w,{getResData:()=>v});module.exports=u(w);var m=require("@aws-sdk/client-dynamodb"),v=async(e,t,s,a)=>{if(e){let o=atob(e);console.log("Getting from ",`${t}/${e}`);let f=btoa(o+"_"+process.env.SAML_CLIENTID),l=await fetch(`${t}/${f}`,{method:"GET",cache:"no-cache",headers:{"Content-Type":"application/json",Authorization:a}});if(l.status!==200)throw new Error(`Error: ${l.status}`);let i=await l.json();console.log("fetch samlproxy get resData",i);let p={TableName:process.env.AMFA_SPINFO_TABLE,Key:{id:{S:`#SAML#${e}`}}},n=null;try{let r=await s.send(new m.GetItemCommand(p));console.log("get spInfo from dynamodb Res",r),r?.Item?.id&&(n={logoUrl:r?.Item?.logoUrl?.S,serviceUrl:r?.Item?.serviceUrl?.S,released:!!r?.Item?.released?.BOOL})}catch(r){console.log("samlslist get spInfo from dynamodb error",r)}return{id:e,name:i.name,metadataUrl:i.metadataUrl,entityId:o,serviceUrl:n?.serviceUrl,logoUrl:n?.logoUrl,released:n?.released}}return{id:e}};0&&(module.exports={getResData});
//# sourceMappingURL=get.js.map
