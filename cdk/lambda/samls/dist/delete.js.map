{
  "version": 3,
  "sources": ["../delete.mjs"],
  "sourcesContent": ["//AWS configurations\nimport {\n    DeleteItemCommand,\n} from '@aws-sdk/client-dynamodb';\n\n\nexport const deleteResData = async (endcodedId, samlurl, cognitoToken, reloadUrl, dynamodb) => {\n\n    if (endcodedId) {\n\n        // const clientId = await getUserPoolClientId(cognitoISP);\n        const entityId = atob(endcodedId);\n\n        // if (clientId) {\n        const response = await fetch(`${samlurl}/${endcodedId}`, {\n            method: \"DELETE\", // *GET, POST, PUT, DELETE, etc.\n            cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": cognitoToken,\n            },\n            body: JSON.stringify({\n                clientId: process.env.SAML_CLIENTID,\n                entityId,\n            }), // body data type must match \"Content-Type\" header\n        });\n\n        console.log('saml sp delete result', response);\n\n        const res = await fetch(reloadUrl, {\n            method: \"GET\", // *GET, POST, PUT, DELETE, etc.\n            cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": cognitoToken,\n            },\n        });\n        const resTxt = await res.text();\n        console.log('samlproxy reload result', res);\n        console.log('samlproxy reload result text', resTxt);\n\n        try {\n            await dynamodb.send(new DeleteItemCommand({\n                TableName: process.env.AMFA_SPINFO_TABLE,\n                Key: {\n                    id: { S: '#SAML#' + endcodedId },\n                },\n            }));\n        } catch (err) {\n            console.log('Error deleting SAML SPINFO item from dynamodb', err);\n        }\n\n        return response.json();\n\n    };\n}\n\nexport default deleteResData;"],
  "mappings": "yaAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,aAAAE,EAAA,kBAAAC,IAAA,eAAAC,EAAAJ,GACA,IAAAK,EAEO,oCAGMF,EAAgB,MAAOG,EAAYC,EAASC,EAAcC,EAAWC,IAAa,CAE3F,GAAIJ,EAAY,CAGZ,IAAMK,EAAW,KAAKL,CAAU,EAG1BM,EAAW,MAAM,MAAM,GAAGL,KAAWD,IAAc,CACrD,OAAQ,SACR,MAAO,WACP,QAAS,CACL,eAAgB,mBAChB,cAAiBE,CACrB,EACA,KAAM,KAAK,UAAU,CACjB,SAAU,QAAQ,IAAI,cACtB,SAAAG,CACJ,CAAC,CACL,CAAC,EAED,QAAQ,IAAI,wBAAyBC,CAAQ,EAE7C,IAAMC,EAAM,MAAM,MAAMJ,EAAW,CAC/B,OAAQ,MACR,MAAO,WACP,QAAS,CACL,eAAgB,mBAChB,cAAiBD,CACrB,CACJ,CAAC,EACKM,EAAS,MAAMD,EAAI,KAAK,EAC9B,QAAQ,IAAI,0BAA2BA,CAAG,EAC1C,QAAQ,IAAI,+BAAgCC,CAAM,EAElD,GAAI,CACA,MAAMJ,EAAS,KAAK,IAAI,oBAAkB,CACtC,UAAW,QAAQ,IAAI,kBACvB,IAAK,CACD,GAAI,CAAE,EAAG,SAAWJ,CAAW,CACnC,CACJ,CAAC,CAAC,CACN,OAASS,EAAP,CACE,QAAQ,IAAI,gDAAiDA,CAAG,CACpE,CAEA,OAAOH,EAAS,KAAK,EAG7B,EAEOV,EAAQC",
  "names": ["delete_exports", "__export", "delete_default", "deleteResData", "__toCommonJS", "import_client_dynamodb", "endcodedId", "samlurl", "cognitoToken", "reloadUrl", "dynamodb", "entityId", "response", "res", "resTxt", "err"]
}
